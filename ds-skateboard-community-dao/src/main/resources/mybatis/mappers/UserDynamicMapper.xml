<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nf.skateboard.dao.UserDynamicDao">

    <insert id="insertUserDynamic">
        insert into user_dynamic(user_id, dynamic_content, user_image_id)
         VALUES (#{userDynamic.userId},#{userDynamic.dynamicContent},#{userDynamic.userImageId})
    </insert>

    <insert id="insertUserDynamicImage" useGeneratedKeys="true" keyProperty="dynamicImageId">
        insert into dynamic_image(user_image_id, dynamic_image_url)
         VALUES (#{userDynamicImage.userImageId},#{userDynamicImage.dynamicImageUrl})
    </insert>

    <insert id="insertDynamicComment">
        insert into dynamic_comment(user_id, user_dynamic_id, comment_content, comment_level, comment_parent_id)
        values(#{comment.userId},#{comment.userDynamicId},#{comment.commentContent},#{comment.commentLevel},#{comment.commentParentId})
    </insert>

    <select id="getUserDynamicByDynamicId" resultType="com.nf.skateboard.entity.UserDynamic">
        select user_dynamic_id, user_id, dynamic_time, dynamic_content, user_image_id from user_dynamic where user_dynamic_id=#{dynamicId}
    </select>

    <select id="listUserDynamicByUserId" resultType="com.nf.skateboard.entity.UserDynamic">
        select user_dynamic_id, user_id, dynamic_time, dynamic_content, user_image_id from user_dynamic
        where user_id=#{userId}
    </select>

    <select id="listUserDynamicImageByUserImageId" resultType="com.nf.skateboard.entity.UserDynamicImage">
        select dynamic_image_id, user_image_id, dynamic_image_url from dynamic_image
        where user_image_id=#{userImageId}
    </select>

    <select id="listDynamicComment" resultType="com.nf.skateboard.entity.DynamicComment">
        select dynamic_comment_id, user_id, user_dynamic_id, comment_content, comment_time, comment_level, comment_parent_id, comment_heat from dynamic_comment
        <where>
            <if test="dynamicId != null">
                user_dynamic_id=#{dynamicId} and
            </if>
            <if test="commentLevel != null">
                <if test="commentLevel == 1">
                    comment_level=#{commentLevel}
                </if>
                <if test="commentLevel > 1">
                    comment_level>=#{commentLevel}
                </if>
            </if>
        </where>
        order by comment_heat
    </select>

<!--    这里留个bug 按照设计的评论级别有123456789... 但是目前只有1 2 两级，有第3级页面显示的逻辑不会写-->
    <select id="listChileCommentByCommentId" resultType="com.nf.skateboard.entity.DynamicComment">
        select dynamic_comment_id, user_id, user_dynamic_id, comment_content, comment_time, comment_level, comment_parent_id, comment_heat from dynamic_comment
        where comment_parent_id=#{commentParentId} order by comment_heat

    </select>

    <select id="getDynamicCommentByCommentId" resultType="com.nf.skateboard.entity.DynamicComment">
        select dynamic_comment_id, user_id, user_dynamic_id, comment_content, comment_time, comment_level, comment_parent_id, comment_heat from dynamic_comment
        where dynamic_comment_id=#{commentId}
    </select>

    <update id="updateUserDynamicImage">
        update dynamic_image set user_image_id=#{listImageId[0]}
        where dynamic_image_id in (<foreach collection="listImageId" separator="," item="xxx">#{xxx}</foreach>)
    </update>

    <delete id="deleteUserDynamicById">
        delete from user_dynamic where user_dynamic_id=#{dynamicId}
    </delete>

    <delete id="deleteDynamicImageByImageId">
        delete from dynamic_image where user_image_id=#{imageId}
    </delete>

</mapper>